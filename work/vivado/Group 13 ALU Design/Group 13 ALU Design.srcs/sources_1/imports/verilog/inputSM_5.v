/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module inputSM_5 (
    input [15:0] input_switches,
    input [0:0] enter_button,
    input clk,
    input rst,
    output reg [15:0] a_out,
    output reg [15:0] b_out,
    output reg [5:0] alufn_out,
    output reg displayState
  );
  
  
  
  reg [15:0] M_a_d, M_a_q = 1'h0;
  
  reg [15:0] M_b_d, M_b_q = 1'h0;
  
  reg [5:0] M_alufn_d, M_alufn_q = 1'h0;
  
  
  localparam WAITFIRSTPRESS_statemachine = 2'd0;
  localparam WAITSECONDPRESS_statemachine = 2'd1;
  localparam WAITTHIRDPRESS_statemachine = 2'd2;
  localparam WAITFOURTHPRESS_statemachine = 2'd3;
  
  reg [1:0] M_statemachine_d, M_statemachine_q = WAITFIRSTPRESS_statemachine;
  
  always @* begin
    M_statemachine_d = M_statemachine_q;
    M_a_d = M_a_q;
    M_b_d = M_b_q;
    M_alufn_d = M_alufn_q;
    
    a_out = 16'h0000;
    b_out = 16'h0000;
    alufn_out = 6'h00;
    
    case (M_statemachine_q)
      WAITFIRSTPRESS_statemachine: begin
        if (enter_button) begin
          M_a_d = input_switches;
          M_statemachine_d = WAITSECONDPRESS_statemachine;
          displayState = 1'h0;
        end else begin
          M_statemachine_d = WAITFIRSTPRESS_statemachine;
          displayState = 1'h0;
        end
      end
      WAITSECONDPRESS_statemachine: begin
        if (enter_button) begin
          M_b_d = input_switches;
          M_statemachine_d = WAITTHIRDPRESS_statemachine;
          displayState = 1'h0;
        end else begin
          M_statemachine_d = WAITSECONDPRESS_statemachine;
          displayState = 1'h0;
        end
      end
      WAITTHIRDPRESS_statemachine: begin
        if (enter_button) begin
          M_alufn_d = input_switches[0+5-:6];
          M_statemachine_d = WAITFOURTHPRESS_statemachine;
          displayState = 1'h0;
        end else begin
          M_statemachine_d = WAITTHIRDPRESS_statemachine;
          displayState = 1'h0;
        end
      end
      WAITFOURTHPRESS_statemachine: begin
        if (enter_button) begin
          M_statemachine_d = WAITFIRSTPRESS_statemachine;
          displayState = 1'h0;
        end else begin
          a_out = M_a_q;
          b_out = M_b_q;
          alufn_out = M_alufn_q;
          M_statemachine_d = WAITFOURTHPRESS_statemachine;
          displayState = 1'h1;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_statemachine_q <= 1'h0;
    end else begin
      M_statemachine_q <= M_statemachine_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_a_q <= 1'h0;
    end else begin
      M_a_q <= M_a_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_b_q <= 1'h0;
    end else begin
      M_b_q <= M_b_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_alufn_q <= 1'h0;
    end else begin
      M_alufn_q <= M_alufn_d;
    end
  end
  
endmodule
