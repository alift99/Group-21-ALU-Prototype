module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,          // USB->Serial output
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) 
{
  
  sig rst;                  // reset signal
  
  .clk(clk) 
  {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  edge_detector buttondetector(#RISE(1), #FALL(0),.clk(clk)); //detect on rising edge only
  button_conditioner buttoncond(.clk(clk));
  alu aluMachine;  
  inputSM inputMachine(.clk(clk), .rst(rst));
  
  always 
  {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    usb_tx = usb_rx;        // loop serial port
    
    led = 8h00;             // turn LEDs off
    
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits
      
    buttoncond.in = io_button[1];
    buttondetector.in = buttoncond.out;

    inputMachine.enter_button = buttondetector.out; // feed button signal into inputSM's input
    inputMachine.input_switches[7:0] = io_dip[0][7:0];
    inputMachine.input_switches[15:8] = io_dip[1][7:0];

    if (inputMachine.displayState) 
    {
      aluMachine.a = inputMachine.a_out;
      aluMachine.b = inputMachine.b_out;
      aluMachine.alufn = inputMachine.alufn_out;
      io_led[0][7:0] = aluMachine.out[7:0];
      io_led[1][7:0] = aluMachine.out[15:8];
      io_led[2][2:0] = aluMachine.zvn[2:0];
    } 
    else
    {
      aluMachine.a = 16b0;
      aluMachine.b = 16b0;
      aluMachine.alufn = 6b0;
      io_led = 3x{{8h00}};
    }
}